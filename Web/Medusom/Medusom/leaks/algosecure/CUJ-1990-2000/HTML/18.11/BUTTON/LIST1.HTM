<HTML><HEAD>
<TITLE>November 2000/Standard C++ IOStreams and Locales/Listing 1</TITLE></HEAD>

<BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">

<h4><A NAME="heading1">Listing 1: CaeserRotateFacet.h</A></h4>
<pre>
#ifndef CAESAR_ROTATE_FACET_H
#define CAESAR_ROTATE_FACET_H

#include  &lt;locale&gt;
#include  &lt;cstddef&gt;

class CaesarRotateCvt : 
   public std::codecvt&lt;char, char, std::mbstate_t&gt;
{
   public:
      explicit CaesarRotateCvt( std::size_t refs = 0 );

   protected:
      virtual ~CaesarRotateCvt( );

      virtual std::codecvt_base::result 
      do_in( std::mbstate_t &amp; state,
             const char * from,
             const char * from_end, 
             const char *&amp; from_next,
             char * to, 
             char * to_limit, 
             char *&amp; to_next ) const;
    
      virtual std::codecvt_base::result 
      do_out( std::mbstate_t &amp; state,
              const char * from,
              const char * from_end,
              const char *&amp; from_next,
              char * to,
              char * to_limit,
              char *&amp; to_next ) const;
    
    virtual std::codecvt_base::result 
    do_unshift( std::mbstate_t &amp; state,
                char * to,
                char * to_limit,
                char *&amp; to_next ) const;

    virtual int do_encoding( ) const throw( );

    virtual bool do_always_noconv( ) const throw( );

    virtual int do_length( const std::mbstate_t &amp;,
                           const char * from,
                           const char * end,
                           std::size_t max ) const;

    virtual int do_max_length( ) const throw( );
};

#endif
</pre></body></html>
