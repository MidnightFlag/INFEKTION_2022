<HTML>
<HEAD>
<TITLE>December 2000</TITLE></HEAD>     <BODY BACKGROUND="" BGCOLOR="#FFFFFF" TEXT="#000000">
          <BLOCKQUOTE> <IMG SRC="../logo.gif" ALT="{logo}" WIDTH="310" HEIGHT="100">
               
               <H3><FONT COLOR="#000080">December 2000<BR>
                Volume 18 Number 12</FONT></H3>
               
<H3><FONT COLOR="#FF0000">GRAPHICS</FONT></H3>
<H4><A HREF="phillips/phillips.htm">Removing Image Noise with Adaptive Filters</A></H4>
<p><b>Dwayne Phillips</b><br>
<i>There is no such thing as a universal filter, but we can get close by building one that adapts to the local noise. Dwayne Phillips walks us through the math to make a filter look a little bit smart.</i></p>

<H4><A HREF="wu/wu.htm">Effective Contour Creation with OpenGL Texture Mapping</A></H4>
<p><b>Wenfei Wu</b><br>
<i>In graphics applications, "let the hardware do it" is generally good advice. Today's graphics hardware keeps getting better and better, and OpenGL knows how to exploit its capabilities. Even producing contour plots can be a fairly painless operation.</i></p>

<H3><FONT COLOR="#FF0000">FEATURES</FONT></H3>

<H4><A HREF="bavestre/bavestre.htm">A Class Template for N-Dimensional Generic Resizable Arrays</A></H4>
<p><b>Giovanni Bavestrelli</b><br>
<i>Need dynamic arrays that are efficient and intuitive? Try a little template recursion and specialization.</i></p>

<H3><FONT COLOR="#FF0000">C/C++ TIPS</FONT></H3>

<H4><A HREF="tips/tips.htm">Tip #4: Self Destructing Threads</A></H4>
<p><b>Mark Peterson</b><br>
<i>A way to make threads easier to manage.</i></p>

<H3><FONT COLOR="#FF0000">C/C++ CONTRIBUTING EDITORS</FONT></H3>

<H4><A HREF="dewhurst/dewhurst.htm">Common Knowledge: Fungible Control Structures</A></H4>
<p><b>Steve Dewhurst</b><br>
<i>Steve presents some effective but unorthodox methods for controlling flow of execution &#151; including one that looks downright weird.</i></p>

<H4><A HREF="pbecker/pbecker.htm">The Journeyman's Shop: Trap Handlers, Sticky Bits, and Floating-Point Comparisons</A></H4>
<p><b>Pete Becker</b><br>
<i>Pete wraps up his series on practical floating-point math.</i></p>

<H4><A HREF="meyers/meyers.htm">The New C: Integers in C99, Part 1</A></H4>
<p><b>Randy Meyers</b><br>
<i>C has its roots in typeless languages, but it has come a </i>long long<i> way from its humble beginnings.</i></p>

<H4><A HREF="tbecker/tbecker.htm">STL &amp; Generic Programming: Introduction to the STL</A></H4>
<p><b>Thomas Becker</b><br>
<i>Here's a very brief history of the C++ Standard library, and a call to abandon the naive view that the STL is "just a bunch of containers."</i></p>

<H4><A HREF="schmidt/schmidt.htm">Uncaught Exceptions: No No .NET</A></H4>
<p><b>Bobby Schmidt</b><br>
<i>Bobby does a little moonlighting at the VC++ help desk, and battles some phantom foos in his spare time.</i></p>

<H3><FONT COLOR="#FF0000">DEPARTMENTS</FONT></H3>

<H4><A HREF="editor/editor.htm">Editor's Forum</A></H4>
<H4><A HREF="newprod/newprod.htm">New Products</A></H4>
<H4><A HREF="letters/letters.htm">We Have Mail</A></H4>

<H3><FONT COLOR="#FF0000">C++ EXPERTS ON THE WEB</FONT></H3>

<p>In this new, web-only component of <I>CUJ,</I> we continue publication of the columns that were popular in the former <I>C++ Report</I> magazine. The following articles are featured on the <I>CUJ</I> website this month:</p>

<H4><A HREF="../cexp1812/austern/austern.htm">The Standard Librarian: What are Allocators Good For?</A></H4>
<p><b>Matt Austern</b><br>
<i>Most of us use STL allocators without knowing it; Matt explains when we might want to invoke them explicitly or write our own, and how to go about it.</i></p>

<H4><A HREF="../cexp1812/langer/langer.htm">Effective C++ Standard Library: Explicit Function Template Argument Specification and the STL</A></H4>
<p><b>Klaus Kreft and Angelika Langer</b><br>
<i>A subtle problem with templates that could bite you if you're not careful.</i></p>

<H4><A HREF="../cexp1812/alexandr/alexandr.htm">Generic&lt;Programming&gt;: Change the Way You Write Exception-Safe Code &#151; Forever</A></H4>
<p><b>Andrei Alexandrescu and Petru Marginean</b><br>
<i>Here's a handy template that makes exception safety a whole lot easier to achieve.</i></p>

<H4><A HREF="../cexp1812/hyslop/hyslop.htm">Conversations: Virtually Yours</A></H4>
<p><b>Jim Hyslop and Herb Sutter</b></br>
<i>Guideline: virtual functions should be made private if possible. Surprised? This article gives the rationale.</i></p>

</BLOCKQUOTE></BODY></HTML>
