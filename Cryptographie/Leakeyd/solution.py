import gmpy2
from math import gcd
from Crypto.Util.number import isPrime, getPrime, bytes_to_long
from Crypto.Util.number import bytes_to_long, long_to_bytes, inverse

n = 15867603034388596900784201081265197868676617376392549680300794151955659275844625645492908280392361869107867034813061856272357205668543178112516432717295728178579122670384454777056182990702073581852521503634973148738396005433574969527718837137390259964214910752851297460902019310641844790344445623867904716588181877041468583652983222807022497362722083389783863376003094290449138262227454671562946507598575165987513129110912120944239647344283395548416843046827090507791907382375097196470669540094817037730341730718604033043764379015783764741133596378460125479691242958370971009005023341783815534599609858884294022676437
e1 = 66961
d1 = 7329652028145841470977974099022025287496250833607591794647389733040732621393798118916102597344964157843751366523839492784759497745459432239635695111761684686483637390685049068997249086563907915955262654813000917901873132779765944093754145719099447901810477807924664831217579774756394038472305485160887095305942111040304620437659638180534439722366780765044621577896573486411799727437503325638284743379713967842774036149740955229284661158528699438008131634066715741604298232482207901603082839434682887302097581259996589786916166746663531567287250975795133933593602163325436106494710316771714077807391681885295749134677
e2 = 78697
ct = 11762326641566229527521579794597471117672555756847825051937222212567861229087435185881192315677109159083644352317186965990813133694805095885230214956932290405317763723517966812981021824570358360129121532151800307689102768102542994621740113404466024807813311247297997839962291010374833565827840512497034167519406778747071088827056117554645968501549343565686647643250420728226652069593556384091872174570823524791179398846800909491264332949179712748739783739831391201128817973183904692227768686197859625285643558345851830035563796379859161497555232292688754603544899677160247626532560397161903623133749001712280409168199

# Step 1 found key
k = (e1*d1) // n + 1
assert (e1 * d1 - 1) % k == 0

# Step 2 find p and q
X = n + 1 - (e1*d1 - 1) // k
a = 1
b = X
c = n
p = -(-b + gmpy2.isqrt(b**2 - 4*a*c)) // (2*a)
assert n % p == 0
q = n // p

assert (p*q) == n 
assert isPrime(p) 
assert isPrime(q)

# Final step decrypt flag
phi = (p-1)*(q-1)
d2 = inverse(e2, phi)
pt = pow(ct, d2, n)
print(long_to_bytes(pt))


# MCTF{Y0u_jU5t_c4n"t_fInd_Th7s_FLaG}